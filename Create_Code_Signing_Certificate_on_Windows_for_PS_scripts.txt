Windows 7: New-SelfSignedCertificateEx
 Self-signed certificate generator (PowerShell): https://gallery.technet.microsoft.com/scriptcenter/self-signed-certificate-5920a7c6
Usage:
 New-SelfsignedCertificateEx -Subject "CN=Test Code Signing" `
 -EKU "Code Signing" `
 -KeySpec "Signature" ` 
 -KeyUsage "DigitalSignature" `
 -FriendlyName "Test code signing"
 -NotAfter $([datetime]::now.AddYears(5))

Windows 8: certreq.exe
 built-in
Usage:
 Certreq –new path\inffilename.inf
inffilename.inf:
 [NewRequest]
 Subject = "CN=Test Code Signing"
 KeyLength = 2048
 KeyAlgorithm = RSA
 ProviderName = "Microsoft Enhanced RSA and AES Cryptographic Provider"
 MachineKeySet = false
 Exportable = true
 KeySpec = 2
 KeyUsage = 0x80
 RequestType = Cert
 [EnhancedKeyUsageExtension]
 OID=1.3.6.1.5.5.7.3.3 ; Code signing

Windows 10: New-SelfSignedCertificate
 PowerShell cmdlet
Usage:
 New-SelfSignedCertificate -CertStoreLocation cert:\currentuser\my `
 -Subject "CN=Test Code Signing" `
 -KeyAlgorithm RSA `
 -KeyLength 2048 `
 -Provider "Microsoft Enhanced RSA and AES Cryptographic Provider" `
 -KeyExportPolicy Exportable `
 -KeyUsage DigitalSignature `
 -Type CodeSigningCert

Alternative: CreateCertGUI

Dir code signing certificates
 gci cert: -rec -code

However, self-signed certificate usage for code signing in production environments is dsicouraged. You should use them in test environments only.

For private usage (within organization only), you should check if company already owns PKI infrastructure and contact appropriate personnel to receive company-approved code signing certificate.

For public scripts (you are going to distribute along with software packages, or deliver scripts to your customers), I would suggest to purchase code signing from globally trusted commercial CA provider.

Ref: https://serverfault.com/questions/824574/create-code-signing-certificate-on-windows-for-signing-powershell-scripts
